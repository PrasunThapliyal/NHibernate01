<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true">

  <variable name="appname" value="equipmenttopology" />
  <variable name="logpath" value="/bp2/log" />

  <!-- define various log targets -->
  <targets>
    <target
      xsi:type="File"
      name="file"
      fileName="${logpath}/${appname}.log"
      archiveFileName="${logpath}/${appname}.{##}.log"
      archiveAboveSize="1000000"
      archiveNumbering="Rolling"
      maxArchiveFiles="5"
      keepFileOpen="false"
      layout="${date:format=yyyy-MM-dd HH\:mm\:ss.fff} ${uppercase:${level}} ${logger} ${message} ${exception}" />
    <target name="aw" xsi:type="AsyncWrapper">
      <target
        xsi:type="File"
        name="nsifile"
        fileName="${logpath}/${appname}_nsi.log"
        archiveFileName="${logpath}/${appname}_nsi.{#}.log.zip"
        archiveAboveSize="30000000"
        archiveNumbering="Rolling"
        maxArchiveFiles="100"
        keepFileOpen="false"
        enableArchiveFileCompression="true"
        layout="${longdate} ${uppercase:${level}} ${message} ${exception}" />
    </target>
    <target xsi:type="Null" name="blackhole" />
    <target xsi:type="Console" name="stdout" layout="${date:format=yyyy-MM-dd HH\:mm\:ss.fff} ${uppercase:${level}} ${logger} ${message} ${exception}" detectConsoleAvailable="false" />
    <target xsi:type="BpSyslog" name="syslog" layout="${BpLogMessageToJsonRenderer}" />
  </targets>
  <rules>
    <!--Skip Microsoft logs and so log only own logs-->
    <logger name="Microsoft.*" maxlevel="Info" writeTo="blackhole" final="true" />
    <logger name="Ciena.BluePlanet.BpRestClients.Nsi.*" minlevel="Trace" writeTo="nsifile" final="true" />
    <logger name="Ciena.BluePlanet.BpRestClients.Ifd.*" minlevel="Trace" writeTo="nsifile" final="true" />
    <logger name="*" minlevel="Info" writeTo="file,stdout,syslog">
      <filters>
        <when condition="contains('${message}','CollectionOwner not found')" action="Ignore" />
        <when condition="contains('${message}','Collection should not contain entity')" action="Ignore" />
        <when condition="contains('${message}','Collection should contain entity')" action="Ignore" />
      </filters>
    </logger>
  </rules>
</nlog>